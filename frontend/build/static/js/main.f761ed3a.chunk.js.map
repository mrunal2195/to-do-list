{"version":3,"sources":["reducers/reducer.js","serviceWorker.js","components/ListItem.js","reducers/actions.js","components/List.js","components/video.js","services/listService.js","reducers/sagas.js","index.js"],"names":["reducer","state","action","type","Object","objectSpread","list","payload","Boolean","window","location","hostname","match","ListItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onPropChange","prop","e","console","log","target","checked","setState","defineProperty","updateItem","_id","deleteItem","item","isChecked","date","react_default","a","createElement","className","id","onChange","onClick","Component","connect","dispatch","List","onpropChange","value","addTodo","createItem","renderItems","map","components_ListItem","key","getList","placeholder","listapi","require","create","baseURL","listService","get","then","response","data","put","concat","delete","post","getListWatcher","updateItemWatcher","deleteItemWatcher","createItemWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","ListService","sent","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","_context5","takeLatest","_marked5","_context6","takeEvery","_marked6","_context7","_marked7","_context8","_marked8","_context9","all","_marked9","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleWare","createSagaMiddleware","enhancer","applyMiddleware","Store","createStore","Reducer","run","ReactDOM","render","es","store","components_List","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f761ed3a.chunk.js","sourcesContent":["\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n\r\n        case 'GET_LIST':\r\n            return({\r\n                ...state,\r\n                list: action.payload\r\n            })\r\n        \r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateItem, deleteItem } from '../reducers/actions'\r\n\r\n\r\nclass ListItem extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      item: this.props.item.item,\r\n      isChecked: this.props.item.isChecked,\r\n      _id: this.props.item._id,\r\n      date: this.props.item.date\r\n    }\r\n  }\r\n\r\n  onPropChange = prop => e => {\r\n    console.log(e.target.checked)\r\n    this.setState({\r\n      [prop] : e.target.checked\r\n    }, () => this.props.updateItem(this.state, this.state._id) )\r\n  }\r\n  \r\n  deleteItem = () => {\r\n    this.props.deleteItem(this.state._id)\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n        <div className=\"form-check\">\r\n          <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" onChange={this.onPropChange('isChecked')}\r\n          checked={this.props.item.isChecked}/>\r\n          <label className=\"form-check-label\">{this.props.item.item}</label>\r\n        </div>\r\n        <span><i className=\"far fa-trash-alt\" onClick={this.deleteItem}></i></span>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateItem: (item, id) => dispatch(updateItem(item, id)),\r\n  deleteItem: (id) => dispatch(deleteItem(id))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem)\r\n","\r\nexport const getList = () => ({\r\n    type: 'REQUEST_LIST'\r\n})\r\n\r\nexport const updateItem = (item, id) => ({\r\n    type: 'UPDATE_ITEM',\r\n    payload: {item, id}\r\n})\r\n\r\nexport const deleteItem = (id) => ({\r\n    type: 'DELETE_ITEM',\r\n    payload: id\r\n})\r\n\r\nexport const createItem = (item) => ({\r\n    type: 'CREATE_ITEM',\r\n    payload: item\r\n})","import React, { Component } from 'react';\r\nimport '../styles/list.css';\r\nimport ListItem from './ListItem';\r\nimport { connect } from 'react-redux';\r\nimport { getList, createItem  } from '../reducers/actions';\r\n\r\nclass List extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            item: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getList()\r\n    }\r\n\r\n    onpropChange = prop => e =>{\r\n        this.setState({\r\n            [prop]: e.target.value\r\n        })\r\n    }\r\n\r\n    addTodo = () => {\r\n       this.props.createItem(this.state);\r\n    }\r\n\r\n    renderItems = () => {\r\n        const items = this.props.list || []\r\n        const itemComponents = items.map(item => <ListItem key={item.item} item={item}/>)\r\n        return itemComponents;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n               <ul className=\"list-group to-do-list mt-5\">\r\n                    <li className=\"list-group-item active\">TO DO LIST</li>\r\n                </ul>\r\n                <div className=\"input-group mb-3 mt-3\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"add to-do\" onChange={this.onpropChange('item')} />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={this.addTodo}>+</button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"list-group to-do-list mt-1\">\r\n                   {this.renderItems()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToprops = state => ({\r\n    list : state.list\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getList: () => dispatch(getList()),\r\n    createItem: (item) => dispatch(createItem(item))\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(List)\r\n","import React, { Component } from 'react'\r\nimport ReactPlayer from 'react-player'\r\n \r\nclass Video extends Component {\r\n  render () {\r\n    return (\r\n    <div className=\"container\">\r\n        <ReactPlayer url='https://media.w3.org/2010/05/sintel/trailer_hd.mp4' \r\n            playing \r\n            loop={true} \r\n            volume={0}\r\n            muted={true}\r\n            width='100%'\r\n            height='100%'  />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Video;\r\n","const axios = require('axios');\r\n\r\nconst listapi = axios.create({\r\n    baseURL : 'http://localhost:8080/api/list/'\r\n});\r\n\r\n\r\nconst getList = () => listapi.get('/').then(response => response.data);\r\n\r\nconst updateItem = (id, item) => listapi.put(`/${id}`, item).then(response => response.data);\r\n\r\nconst deleteItem = (id) => listapi.delete(`/${id}`).then(response =>response.data);\r\n\r\nconst createItem = (item) => listapi.post('/', item).then(response => response.data);\r\n\r\n\r\n\r\nexport default {\r\n    getList,\r\n    updateItem,\r\n    deleteItem,\r\n    createItem\r\n}","import ListService  from '../services/listService';\r\nimport { put, takeLatest, all, takeEvery } from '@redux-saga/core/effects';\r\n\r\n\r\nfunction* getList(){\r\n    const list = yield ListService.getList();\r\n    console.log(\"list: \", list);\r\n    yield put( {type: \"GET_LIST\", payload: list})\r\n}\r\n\r\nfunction* updateItem(action){\r\n    const id = action.payload.id;\r\n    const item = action.payload.item;\r\n    console.log(id);\r\n    yield ListService.updateItem(id, item);\r\n    const list =  yield ListService.getList();\r\n    yield put ({type: 'GET_LIST', payload: list })\r\n}\r\n\r\nfunction* deleteItem(action){\r\n    const id = action.payload;\r\n    yield ListService.deleteItem(id);\r\n    const list =  yield ListService.getList();\r\n    yield put ({type: 'GET_LIST', payload: list })\r\n}\r\n\r\nfunction* createItem(action){\r\n    const item = action.payload;\r\n    yield ListService.createItem(item);\r\n    const list = yield ListService.getList()\r\n    yield put ({type: 'GET_LIST', payload: list })\r\n}\r\n\r\nfunction* getListWatcher(){\r\n    yield takeLatest('REQUEST_LIST', getList)\r\n}\r\n\r\nfunction* updateItemWatcher(){\r\n   yield takeEvery('UPDATE_ITEM', updateItem) \r\n}\r\n\r\nfunction* deleteItemWatcher(){\r\n    yield takeEvery('DELETE_ITEM', deleteItem)\r\n}\r\n\r\nfunction* createItemWatcher(){\r\n    yield takeEvery('CREATE_ITEM', createItem)\r\n}\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        getListWatcher(),\r\n        updateItemWatcher(),\r\n        deleteItemWatcher(),\r\n        createItemWatcher()\r\n    ])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { Provider } from 'react-redux';\nimport Reducer from './reducers/reducer'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport List from './components/List';\nimport Video from './components/video';\nimport rootSaga from './reducers/sagas';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst sagaMiddleWare = createSagaMiddleware()\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(sagaMiddleWare)\n)\n\nconst Store = createStore(Reducer, { list: []}, enhancer)\n\nsagaMiddleWare.run(rootSaga)\n\nReactDOM.render(\n    <Provider store={Store}>\n       <List /> \n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}